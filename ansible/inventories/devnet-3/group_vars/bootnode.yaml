ethereum_cl_bootnode: "{{ hostvars['bootnode-1']['cl_bootnode_fact_enr'] }}"
cl_bootnode_container_image: "{{ default_tooling_images.cl_bootnode }}"
# role: eth_inventory_web
eth_inventory_web_container_networks: "{{ docker_networks_shared }}"
eth_inventory_web_container_env:
  VIRTUAL_HOST: "{{ server_fqdn }}"
  VIRTUAL_PORT: "80"
  VIRTUAL_PATH: "/meta/api"
  VIRTUAL_DEST: "/"
  LETSENCRYPT_HOST: "{{ server_fqdn }}"

# role: ethpandaops.general.ethereum_node
ethereum_node_el: geth
ethereum_node_cl: prysm
ethereum_node_cl_validator_enabled: false

# role: ethpandaops.general.prysm
prysm_container_name: beacon
prysm_container_image: "{{ default_ethereum_client_images.prysm }}"
prysm_container_ports:
  - "127.0.0.1:{{ prysm_ports_http_beacon }}:{{ prysm_ports_http_beacon }}"
  - "{{ prysm_ports_p2p_tcp }}:{{ prysm_ports_p2p_tcp }}"
  - "{{ prysm_ports_p2p_udp }}:{{ prysm_ports_p2p_udp }}/udp"
  - "127.0.0.1:{{ethereum_node_cl_ports_metrics }}:{{ ethereum_node_cl_ports_metrics }}"
  - 0.0.0.0:6061:6061
prysm_container_env:
  VIRTUAL_HOST: "{{ ethereum_node_beacon_hostname }}"
  VIRTUAL_PORT: "{{ ethereum_node_cl_ports_http_beacon | string }}"
  LETSENCRYPT_HOST: "{{ ethereum_node_beacon_hostname }}"
prysm_container_volumes:
  - "{{ prysm_datadir }}:/data"
  - "{{ prysm_auth_jwt_path }}:/execution-auth.jwt:ro"
  - "{{ eth_testnet_config_dir }}:/network-config:ro"
prysm_container_entrypoint:
  - /app/cmd/beacon-chain/beacon-chain
prysm_container_command_extra_args:
  - --grpc-gateway-corsdomain=*
  - --chain-config-file=/network-config/config.yaml
  - --genesis-state=/network-config/genesis.ssz
  - --contract-deployment-block={{ ethereum_network_deposit_contract_block }}
  - --enable-debug-rpc-endpoints
  - --verbosity=debug
  - --delay-block-broadcast=2s
  - --use-rlnc
# role: ethpandaops.general.geth
geth_container_name: execution
geth_container_image: "{{ default_ethereum_client_images.geth }}"
geth_container_env:
  VIRTUAL_HOST: "{{ ethereum_node_rcp_hostname }}"
  VIRTUAL_PORT: "{{ ethereum_node_el_ports_http_rpc | string }}"
  LETSENCRYPT_HOST: "{{ ethereum_node_rcp_hostname }}"
geth_container_command_extra_args:
  - --http.api=eth,net,web3,debug,admin
  - --http.vhosts=*
  - --gcmode=archive
  - --networkid={{ ethereum_network_id }}
  - --syncmode=full
  - --miner.gaslimit=60000000

geth_init_custom_network: true
geth_init_custom_network_genesis_file: "{{ eth_testnet_config_dir }}/genesis.json"
geth_container_pull: true
geth_init_custom_network_container_command:
  - --datadir=/data
  - init
  - --state.scheme=hash
  - /genesis.json

# role: ethpandaops.general.prometheus
prometheus_remote_push_url: https://victoriametrics.ethdevops.io/insert/0/prometheus/api/v1/write
prometheus_remote_write_username: "{{ secret_prometheus_remote_write.username }}"
prometheus_remote_write_password: "{{ secret_prometheus_remote_write.password }}"
prometheus_config: |
  global:
    scrape_interval: 30s
    evaluation_interval: 30s
    scrape_timeout: 10s
    external_labels:
      instance: "{{ inventory_hostname }}"
      ip_address: "{{ ansible_host }}"
      network: "{{ ethereum_network_name }}"
      testnet: "{{ ethereum_network_name }}"
      execution_client: "{{ ethereum_node_el }}"
      consensus_client: "{{ ethereum_node_cl }}"
  remote_write:
    - queue_config:
        batch_send_deadline: 5s
        max_backoff: 500ms
        max_samples_per_send: 500
        min_backoff: 50ms
        max_shards: 100
      url: {{ prometheus_remote_push_url }}
      remote_timeout: 10s
      basic_auth:
        username: {{ prometheus_remote_write_username }}
        password: {{ prometheus_remote_write_password }}
  scrape_configs:
    - job_name: "prometheus"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["localhost:9090"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "node"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["172.17.0.1:9100"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "exporter"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["ethereum-metrics-exporter:9090"]
          labels:
            instance: "{{ inventory_hostname }}"
    - job_name: "consensus_node"
      metrics_path: "/metrics"
      static_configs:
        - targets: ["{{ vars[ethereum_node_cl + '_container_name'] }}:{{ ethereum_node_cl_ports_metrics }}"]
          labels:
            instance: "{{ inventory_hostname }}"
